or #t0, #zero, #zero // 1001 0110 0000 0000 
addi #t0, 2 // 0001 0110 00000010
addi #sp, 3 // 0001 0001 00000011
sw #ra, 0(#sp) // 1110 0101 0001 0000
sw #a0, 1(#sp) // 1110 0010 0001 0001
sw #t0, 2(#sp) // 1110 0110 0001 0010
lw #a0, 1(#sp) // 1000 0010 0001 0001
lw #a1, 2(#sp) // 1000 0011 0001 0010
jal gcd // 0100 000000010111
or #t0, #zero, #zero // 1001 0110 0000 0000 
ori #t0, 1 // 0110 0110 00000001
eq #t0, #rr // 0011 0110 0100 0000 
jeq finish_rel // 0101 000000010010
lw #t0, 1(#sp) // 1000 0110 0001 0001
addi #t0, 1 // 0001 0110 00000001
sw #t0, 1(#sp) // 1110 0110 0001 0001
eq #zero, #zero // 0011 0000 0000 0000 
jeq rel_while // 0101 000000000110
lw #ra, 0(#sp) // 1000 0101 0001 0000
lw #rr, 1(#sp) // 1000 0100 0001 0001
addi #sp, -3 // 0001 0001 11111101
eq #zero, #zero // 0011 0000 0000 0000 
add #pc, #zero, #ra // 0000 1111 0000 0101 
eq #a0, #zero // 0011 0010 0000 0000 
jeq ret_b // 0101 000000100011
eq #a1, #zero // 0011 0011 0000 0000 
jeq ret_a // 0101 000000100101
slt #a0, #a1 // 1101 0010 0011 0000 
jeq bbma // 0101 000000100000
sub #a0, #a0, #a1 // 1111 0010 0010 0011 
eq #zero, #zero // 0011 0000 0000 0000 
jeq gcd_while // 0101 000000011001
sub #a1, #a1, #a0 // 1111 0011 0011 0010 
eq #zero, #zero // 0011 0000 0000 0000 
jeq gcd_while // 0101 000000011001
or #rr, #zero, #a1 // 1001 0100 0000 0011 
add #pc, #zero, #ra // 0000 1111 0000 0101 
or #rr, #zero, #a0 // 1001 0100 0000 0010 
add #pc, #zero, #ra // 0000 1111 0000 0101 
